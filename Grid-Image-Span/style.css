@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400&display=swap');

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    background: #333;
    color: #fff;
    font-family: 'Roboto', sans-serif;
}

h2 {
    font-size: 45px;
    font-weight: 300;
    margin: 10px;
}

h2 span {
    font-size: 30px;
}

p {
    font-size: 20px;
}

.container {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 10px;
}

.container > div {
    cursor: pointer;
    height: 210px;
    /* background: url('./img/bg1.jpg'); */
    background-size: cover;
    /* The background-attachment property is the trick to having the image span across the entire grid. Otherwise the image would appear in total in each grid item. */
    background-attachment: fixed;

    /* Make each div inside the grid container its own flex-box to make alignment easier. */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;

    transition: all .5s ease-in;
}

.container > div:hover {
    opacity: 0.7;
    transform: scale(0.98);
}

.container > div:nth-of-type(1) {
    grid-column: 1 / 3;
}

.container > div:nth-of-type(6) {
    grid-column: 3 / 5;
}

.container > div:nth-of-type(9) {
    grid-column: 3 / 5;
}

.container > div:nth-of-type(10) {
    grid-column: 1 / 3;
}

/* Moving the background to its own class allows you to set multiple background images across the grid and have different parts of each background image appear in various grid items. */
.bg1 {
    background: url('./img/bg1.jpg');
}

.bg2 {
    background: url('./img/bg2.jpg');
    color: #333;
}
